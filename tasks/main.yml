---

- name: Install dependency packages
  become: true
  apt:
    pkg:
      - gpg


# Adding this user to docker group can have security issues when docker
# manages other containers too, but it's better than running docker from root.
- name: User to execute the manage docker on behalf of monitoring
  become: true
  user:
    name: "{{ monitoring_user_name }}"
    state: present
    shell: /bin/bash
    home: "{{ monitoring_user_home_dir }}"

- name: Install docker
  include_role:
    name: geerlingguy.docker
  vars:
    docker_users:
      - "{{ monitoring_user_name }}"

- name: Working directory
  file:
    state: directory
    path: "{{ monitoring_working_dir }}"
    owner: "{{ monitoring_user_name }}"

- name: Render template for the docker-compose file.
  template:
    src: monitoring-docker-compose.yml.j2
    dest: "{{ monitoring_working_dir }}/docker-compose.yml"
    owner: "{{ monitoring_user_name }}"

- name: Promtail config directory
  file:
    state: directory
    path: "{{ monitoring_promtail_config_dir }}"
    owner: "{{ monitoring_user_name }}"
  when: monitoring_promtail_enabled

- name: Render promtail configuration template.
  template:
    src: promtail-config-base.j2
    dest: "{{ monitoring_promtail_config_dir }}/{{ monitoring_promtail_config_filename }}"
  when: monitoring_promtail_enabled

- name: Bring up the containers
  command: docker-compose up -d # noqa: 304
  become: true
  become_user: "{{ monitoring_user_name }}"
  args:
    chdir: "{{ monitoring_working_dir }}"
  changed_when: false

- name: Monitor active users
  block:
    - name: Copy the installer script
      copy:
        dest: "{{ monitoring_working_dir }}/ssh-users.sh"
        src:  "files/ssh-users.sh"
        mode:  0744
        owner: "{{ monitoring_user_name }}"

    - name: Run the installer script
      command: "{{ monitoring_working_dir }}/ssh-users.sh"
      become: true
      become_user: "{{ monitoring_user_name }}"
      args:
        chdir: "{{ monitoring_working_dir }}"
      changed_when: false

    - name: Enable execution of binary
      file:
        path: "{{ monitoring_working_dir }}/prometheus-what-active-users-exporter"
        mode: 0755
        owner: "{{ monitoring_user_name }}"
    - name: Render the daemon
      template:
        src: prometheus-active-users.service.j2
        dest: /etc/systemd/system/prometheus-active-users.service
        owner: root
        group: root
        mode: 0644

    - name: Enable the daemon
      systemd:
        name: prometheus-active-users.service
        enabled: yes
        daemon_reload: yes
        state: started
