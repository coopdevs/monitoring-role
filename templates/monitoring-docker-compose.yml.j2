version: "3.1"
services:
{% if monitoring_nexporter_enabled %}
  nexporter:
    image: quay.io/prometheus/node-exporter:{{ monitoring_nexporter_image_version }}
    container_name: {{ monitoring_nexporter_container_name }}
    restart: always
    ports:
      - {{ monitoring_nexporter_docker_bind }}
    volumes:
      - "/:/host:ro,rslave"
#    healthcheck:
#      test: 'curl http://{{ monitoring_nexporter_host }}:{{ monitoring_nexporter_port }}/metrics'
#      interval: 2s
#      timeout: 20s
{% endif %}
{% if monitoring_promtail_enabled %}
  promtail:
    image: grafana/promtail:{{ monitoring_promtail_image_version }}
    container_name: {{ monitoring_promtail_container_name }}
    restart: always
    ports:
      - {{ monitoring_promtail_docker_bind}}
    volumes:
      - {{ monitoring_promtail_config_dir }}:{{ monitoring_promtail_config_dir }}
{% for module in monitoring_promtail_modules_enabled %}
{% set log_path = monitoring_promtail_modules_available[module]["log_path"] %}
      - {{ log_path }}:{{ log_path }}:ro
{% endfor %}
#    healthcheck:
#      test: 'curl http://{{ monitoring_promtail_host }}:{{ monitoring_promtail_port }}/ready'
#      interval: 2s
#      timeout: 20s
    command: -config.file={{ monitoring_promtail_config_dir }}/{{ monitoring_promtail_config_filename }}
{% endif %}
{% if monitoring_postgres_exporter_enabled %}
  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    network_mode: host
    environment:
      DATA_SOURCE_NAME: postgresql://{{ monitoring_postgres_exporter_pg_user }}:{{ monitoring_postgres_exporter_pg_password | replace('$','$$')}}@localhost:{{ monitoring_postgres_exporter_pg_port }}/postgres?sslmode=disable
{% endif %}
